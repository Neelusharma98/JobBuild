{"version":3,"sources":["component/Welcome.js","lib/isAuth.js","component/Navbar.js","lib/PasswordInput.js","lib/EmailInput.js","lib/apiList.js","component/Login.js","component/Logout.js","lib/FileUploadInput.js","component/Signup.js","component/Home.js","component/Applications.js","component/Profile.js","component/recruiter/CreateJobs.js","component/recruiter/MyJobs.js","component/recruiter/JobApplications.js","component/recruiter/AcceptedApplicants.js","component/recruiter/Profile.js","lib/MessagePopup.js","App.js","reportWebVitals.js","index.js"],"names":["ErrorPage","props","Grid","container","item","direction","alignItems","justify","className","Typography","variant","Welcome","style","marginTop","maxWidth","userType","localStorage","getItem","isAuth","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","buttonIcon","buttonSpacing","marginLeft","Navbar","classes","history","useHistory","handleClick","location","console","log","push","AppBar","position","Toolbar","Button","color","onClick","PasswordInput","useState","showPassword","setShowPassword","FormControl","error","InputLabel","htmlFor","label","OutlinedInput","id","type","endAdornment","InputAdornment","IconButton","onMouseDown","event","preventDefault","edge","value","onChange","labelWidth","onBlur","helperText","FormHelperText","EmailInput","inputErrorHandler","handleInputError","required","TextField","email","message","target","test","String","toLowerCase","server","apiList","login","signup","uploadResume","uploadProfileImage","jobs","applications","rating","user","applicants","body","padding","inputBox","width","submitButton","Login","setPopup","useContext","SetPopupContext","loggedin","setLoggedin","password","loginDetails","setLoginDetails","setInputErrorHandler","handleInput","key","to","Paper","elevation","component","status","Object","keys","some","obj","open","severity","axios","post","then","response","setItem","data","token","catch","err","Logout","useEffect","removeItem","FileUploadInput","uploadTo","identifier","file","setFile","uploadPercentage","setUploadPercentage","xs","height","icon","display","files","name","InputProps","readOnly","FormData","append","Axios","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","url","statusText","handleUpload","disabled","CloudUpload","LinearProgress","MultifieldInput","education","setEducation","map","paddingLeft","paddingRight","institutionName","newEdu","startYear","endYear","skills","resume","profile","bio","contactNumber","signupDetails","setSignupDetails","phone","setPhone","untouched","select","MenuItem","chips","multiline","rows","split","filter","n","length","country","tmpErrorHandler","forEach","toUpperCase","substr","updatedDetails","trim","handleLogin","verified","handleLoginRecruiter","button","jobTileOuter","margin","boxSizing","popupDialog","justifyContent","JobTile","job","setOpen","sop","setSop","handleClose","deadline","Date","toLocaleDateString","Rating","jobType","salary","duration","recruiter","skillsets","skill","Chip","Modal","onClose","outline","flexDirection","minWidth","marginBottom","_id","Authorization","FilterPopup","searchOptions","setSearchOptions","getData","FormControlLabel","control","Checkbox","checked","fullTime","partTime","wfh","Slider","valueLabelDisplay","valueLabelFormat","marks","fullWidth","border","borderRadius","sort","for","desc","Home","setJobs","filterOpen","setFilterOpen","query","searchParams","asc","queryString","join","address","get","today","minHeight","onKeyPress","ev","textAlign","statusBlock","textTransform","ApplicationTile","application","setRating","appliedOn","dateOfApplication","joinedOn","dateOfJoining","fetchRating","background","applied","shortlisted","accepted","rejected","deleted","cancelled","finished","newValue","put","jobId","Applications","setApplications","alignSelf","Profile","profileDetails","setProfileDetails","edu","onAdd","chip","onDelete","index","splice","handleUpdate","CreateJobs","maxApplicants","maxPositions","getTime","toISOString","jobDetails","setJobDetails","inputProps","min","InputLabelProps","shrink","openUpdate","setOpenUpdate","handleCloseUpdate","postedOn","dateOfPosting","acceptedCandidates","delete","MyJobs","avatar","colorSet","updateStatus","statusData","buttonSet","Avatar","src","jobApplicant","method","responseType","Blob","fileURL","URL","createObjectURL","window","getResume","JobApplications","useParams","all","openEndJob","setOpenEndJob","handleCloseEndJob","applicantId","userId","AcceptedApplicants","MessagePopup","reason","Snackbar","autoHideDuration","Alert","paddingTop","createContext","App","popup","Provider","exact","path","Signup","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1e5bd7d.chunk.js","sourcesContent":["import { Grid, Typography } from \"@material-ui/core\";\r\nimport \"./Welcome.css\";\r\n\r\nconst Welcome = (props) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      item\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      className=\"welcome-container\"\r\n    >\r\n      <Grid item>\r\n        <Typography variant=\"h2\">Welcome to Job Portal</Typography>\r\n      </Grid>\r\n      <Grid item style={{ marginTop: \"20px\", maxWidth: \"800px\" }}>\r\n        <Typography variant=\"h6\">\r\n          Here we are hiring for various roles including Cook, Barber, Driver, Maid, Gardener, and many more. \r\n          Our platform connects employers and skilled workers directly to meet daily life needs efficiently.\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport const ErrorPage = (props) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      item\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      className=\"welcome-container\"\r\n    >\r\n      <Grid item>\r\n        <Typography variant=\"h2\">Error 404</Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","const isAuth = () => {\r\n  return localStorage.getItem(\"token\");\r\n};\r\n\r\nexport const userType = () => {\r\n  return localStorage.getItem(\"type\");\r\n};\r\n\r\nexport default isAuth;\r\n","import {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LoginIcon from \"@material-ui/icons/ExitToApp\"; // Login Icon\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\"; // Signup Icon\r\n\r\nimport isAuth, { userType } from \"../lib/isAuth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1), // Space between icon and text\r\n  },\r\n  buttonSpacing: {\r\n    marginLeft: theme.spacing(1), // Space between buttons\r\n  },\r\n}));\r\n\r\nconst Navbar = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  const handleClick = (location) => {\r\n    console.log(location);\r\n    history.push(location);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"fixed\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          Job Portal\r\n        </Typography>\r\n        {isAuth() ? (\r\n          userType() === \"recruiter\" ? (\r\n            <>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/home\")}>\r\n                Home\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/addjob\")}>\r\n                Add Jobs\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/myjobs\")}>\r\n                My Jobs\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/employees\")}>\r\n                Employees\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/profile\")}>\r\n                Profile\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/logout\")}>\r\n                Logout\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/home\")}>\r\n                Home\r\n              </Button>\r\n              <Button\r\n                color=\"inherit\"\r\n                onClick={() => handleClick(\"/applications\")}\r\n              >\r\n                Applications\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/profile\")}>\r\n                Profile\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => handleClick(\"/logout\")}>\r\n                Logout\r\n              </Button>\r\n            </>\r\n          )\r\n        ) : (\r\n          <>\r\n            <Button\r\n              color=\"inherit\"\r\n              onClick={() => handleClick(\"/login\")}\r\n              className={classes.buttonSpacing}\r\n            >\r\n              <LoginIcon className={classes.buttonIcon} />\r\n              Login\r\n            </Button>\r\n            <Button\r\n              color=\"inherit\"\r\n              onClick={() => handleClick(\"/signup\")}\r\n              className={classes.buttonSpacing}\r\n            >\r\n              <PersonAddIcon className={classes.buttonIcon} />\r\n              Signup\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { useState } from \"react\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  IconButton,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\nconst PasswordInput = (props) => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormControl variant=\"outlined\" error={props.error ? props.error : null}>\r\n        <InputLabel htmlFor=\"outlined-adornment-password\">\r\n          {props.label}\r\n        </InputLabel>\r\n        <OutlinedInput\r\n          id=\"outlined-adornment-password\"\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                onClick={handleShowPassword}\r\n                onMouseDown={handleMouseDownPassword}\r\n                edge=\"end\"\r\n              >\r\n                {showPassword ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n          value={props.value}\r\n          onChange={(event) => props.onChange(event)}\r\n          labelWidth={props.labelWidth ? props.labelWidth : 70}\r\n          className={props.className}\r\n          onBlur={props.onBlur ? props.onBlur : null}\r\n        />\r\n        {props.helperText ? (\r\n          <FormHelperText>{props.helperText}</FormHelperText>\r\n        ) : null}\r\n      </FormControl>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PasswordInput;\r\n","import { TextField } from \"@material-ui/core\";\r\n\r\nconst EmailInput = (props) => {\r\n  const {\r\n    label,\r\n    value,\r\n    onChange,\r\n    inputErrorHandler,\r\n    handleInputError,\r\n    required,\r\n    className,\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      label={label}\r\n      variant=\"outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      helperText={inputErrorHandler.email.message}\r\n      onBlur={(event) => {\r\n        if (event.target.value === \"\") {\r\n          if (required) {\r\n            handleInputError(\"email\", true, \"Email is required\");\r\n          } else {\r\n            handleInputError(\"email\", false, \"\");\r\n          }\r\n        } else {\r\n          const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n          if (re.test(String(event.target.value).toLowerCase())) {\r\n            handleInputError(\"email\", false, \"\");\r\n          } else {\r\n            handleInputError(\"email\", true, \"Incorrect email format\");\r\n          }\r\n        }\r\n      }}\r\n      error={inputErrorHandler.email.error}\r\n      className={className}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EmailInput;\r\n","export const server = \"http://localhost:4444\";\r\n\r\nconst apiList = {\r\n  login: `${server}/auth/login`,\r\n  signup: `${server}/auth/signup`,\r\n  uploadResume: `${server}/upload/resume`,\r\n  uploadProfileImage: `${server}/upload/profile`,\r\n  jobs: `${server}/api/jobs`,\r\n  applications: `${server}/api/applications`,\r\n  rating: `${server}/api/rating`,\r\n  user: `${server}/api/user`,\r\n  applicants: `${server}/api/applicants`,\r\n};\r\n\r\nexport default apiList;\r\n","import { useContext, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  makeStyles,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport PasswordInput from \"../lib/PasswordInput\";\r\nimport EmailInput from \"../lib/EmailInput\";\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\nimport isAuth from \"../lib/isAuth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    padding: \"60px 60px\",\r\n  },\r\n  inputBox: {\r\n    width: \"300px\",\r\n  },\r\n  submitButton: {\r\n    width: \"300px\",\r\n  },\r\n}));\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [loggedin, setLoggedin] = useState(isAuth());\r\n\r\n  const [loginDetails, setLoginDetails] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [inputErrorHandler, setInputErrorHandler] = useState({\r\n    email: {\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n    password: {\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n  });\r\n\r\n  const handleInput = (key, value) => {\r\n    setLoginDetails({\r\n      ...loginDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleInputError = (key, status, message) => {\r\n    setInputErrorHandler({\r\n      ...inputErrorHandler,\r\n      [key]: {\r\n        error: status,\r\n        message: message,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    const verified = !Object.keys(inputErrorHandler).some((obj) => {\r\n      return inputErrorHandler[obj].error;\r\n    });\r\n    if (verified) {\r\n      axios\r\n        .post(apiList.login, loginDetails)\r\n        .then((response) => {\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          localStorage.setItem(\"type\", response.data.type);\r\n          setLoggedin(isAuth());\r\n          setPopup({\r\n            open: true,\r\n            severity: \"success\",\r\n            message: \"Logged in successfully\",\r\n          });\r\n          console.log(response);\r\n        })\r\n        .catch((err) => {\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: err.response.data.message,\r\n          });\r\n          console.log(err.response);\r\n        });\r\n    } else {\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"Incorrect Input\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return loggedin ? (\r\n    <Redirect to=\"/\" />\r\n  ) : (\r\n    <Paper elevation={3} className={classes.body}>\r\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\r\n        <Grid item>\r\n          <Typography variant=\"h3\" component=\"h2\">\r\n            Login\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <EmailInput\r\n            label=\"Email\"\r\n            value={loginDetails.email}\r\n            onChange={(event) => handleInput(\"email\", event.target.value)}\r\n            inputErrorHandler={inputErrorHandler}\r\n            handleInputError={handleInputError}\r\n            className={classes.inputBox}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <PasswordInput\r\n            label=\"Password\"\r\n            value={loginDetails.password}\r\n            onChange={(event) => handleInput(\"password\", event.target.value)}\r\n            className={classes.inputBox}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => handleLogin()}\r\n            className={classes.submitButton}\r\n          >\r\n            Login\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { useEffect, useContext } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nconst Logout = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  useEffect(() => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"type\");\r\n    setPopup({\r\n      open: true,\r\n      severity: \"success\",\r\n      message: \"Logged out successfully\",\r\n    });\r\n  }, []);\r\n  return <Redirect to=\"/login\" />;\r\n};\r\n\r\nexport default Logout;\r\n","import { useState, useContext } from \"react\";\r\nimport { Grid, Button, TextField, LinearProgress } from \"@material-ui/core\";\r\nimport { CloudUpload } from \"@material-ui/icons\";\r\nimport Axios from \"axios\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nconst FileUploadInput = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const { uploadTo, identifier, handleInput } = props;\r\n\r\n  const [file, setFile] = useState(\"\");\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n\r\n  const handleUpload = () => {\r\n    console.log(file);\r\n    const data = new FormData();\r\n    data.append(\"file\", file);\r\n    Axios.post(uploadTo, data, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n      onUploadProgress: (progressEvent) => {\r\n        setUploadPercentage(\r\n          parseInt(\r\n            Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n          )\r\n        );\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        handleInput(identifier, response.data.url);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.statusText,\r\n          //   message: err.response.data\r\n          //     ? err.response.data.message\r\n          //     : err.response.statusText,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container item xs={12} direction=\"column\" className={props.className}>\r\n      <Grid container item xs={12} spacing={0}>\r\n        <Grid item xs={3}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            component=\"label\"\r\n            style={{ width: \"100%\", height: \"100%\" }}\r\n          >\r\n            {props.icon}\r\n            <input\r\n              type=\"file\"\r\n              style={{ display: \"none\" }}\r\n              onChange={(event) => {\r\n                console.log(event.target.files);\r\n                setUploadPercentage(0);\r\n                setFile(event.target.files[0]);\r\n              }}\r\n              // onChange={onChange}\r\n              // onChange={\r\n              //   (e) => {}\r\n              //   //   setSource({ ...source, place_img: e.target.files[0] })\r\n              // }\r\n            />\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            label={props.label}\r\n            value={file ? file.name || \"\" : \"\"}\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            style={{ width: \"100%\", height: \"100%\" }}\r\n            onClick={() => handleUpload()}\r\n            disabled={file ? false : true}\r\n          >\r\n            <CloudUpload />\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      {uploadPercentage !== 0 ? (\r\n        <Grid item xs={12} style={{ marginTop: \"10px\" }}>\r\n          <LinearProgress variant=\"determinate\" value={uploadPercentage} />\r\n        </Grid>\r\n      ) : null}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FileUploadInput;\r\n","import { useState, useContext } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  makeStyles,\r\n  Paper,\r\n  MenuItem,\r\n  Input,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/material.css\";\r\n\r\nimport PasswordInput from \"../lib/PasswordInput\";\r\nimport EmailInput from \"../lib/EmailInput\";\r\nimport FileUploadInput from \"../lib/FileUploadInput\";\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\nimport isAuth from \"../lib/isAuth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    padding: \"60px 60px\",\r\n  },\r\n  inputBox: {\r\n    width: \"400px\",\r\n  },\r\n  submitButton: {\r\n    width: \"400px\",\r\n  },\r\n}));\r\n\r\nconst MultifieldInput = (props) => {\r\n  const classes = useStyles();\r\n  const { education, setEducation } = props;\r\n\r\n  return (\r\n    <>\r\n      {education.map((obj, key) => (\r\n        <Grid\r\n          item\r\n          container\r\n          className={classes.inputBox}\r\n          key={key}\r\n          style={{ paddingLeft: 0, paddingRight: 0 }}\r\n        >\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              label={`Institution Name #${key + 1}`}\r\n              value={education[key].institutionName}\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].institutionName = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              label=\"Start Year\"\r\n              value={obj.startYear}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].startYear = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              label=\"End Year\"\r\n              value={obj.endYear}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].endYear = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n      <Grid item>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() =>\r\n            setEducation([\r\n              ...education,\r\n              {\r\n                institutionName: \"\",\r\n                startYear: \"\",\r\n                endYear: \"\",\r\n              },\r\n            ])\r\n          }\r\n          className={classes.inputBox}\r\n        >\r\n          Add another institution details\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [loggedin, setLoggedin] = useState(isAuth());\r\n\r\n  const [signupDetails, setSignupDetails] = useState({\r\n    type: \"applicant\",\r\n    email: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    education: [],\r\n    skills: [],\r\n    resume: \"\",\r\n    profile: \"\",\r\n    bio: \"\",\r\n    contactNumber: \"\",\r\n  });\r\n\r\n  const [phone, setPhone] = useState(\"\");\r\n\r\n  const [education, setEducation] = useState([\r\n    {\r\n      institutionName: \"\",\r\n      startYear: \"\",\r\n      endYear: \"\",\r\n    },\r\n  ]);\r\n\r\n  const [inputErrorHandler, setInputErrorHandler] = useState({\r\n    email: {\r\n      untouched: true,\r\n      required: true,\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n    password: {\r\n      untouched: true,\r\n      required: true,\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n    name: {\r\n      untouched: true,\r\n      required: true,\r\n      error: false,\r\n      message: \"\",\r\n    },\r\n  });\r\n\r\n  const handleInput = (key, value) => {\r\n    setSignupDetails({\r\n      ...signupDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleInputError = (key, status, message) => {\r\n    setInputErrorHandler({\r\n      ...inputErrorHandler,\r\n      [key]: {\r\n        required: true,\r\n        untouched: false,\r\n        error: status,\r\n        message: message,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    const tmpErrorHandler = {};\r\n    Object.keys(inputErrorHandler).forEach((obj) => {\r\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\r\n        tmpErrorHandler[obj] = {\r\n          required: true,\r\n          untouched: false,\r\n          error: true,\r\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\r\n        };\r\n      } else {\r\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\r\n      }\r\n    });\r\n\r\n    console.log(education);\r\n\r\n    let updatedDetails = {\r\n      ...signupDetails,\r\n      education: education\r\n        .filter((obj) => obj.institutionName.trim() !== \"\")\r\n        .map((obj) => {\r\n          if (obj[\"endYear\"] === \"\") {\r\n            delete obj[\"endYear\"];\r\n          }\r\n          return obj;\r\n        }),\r\n    };\r\n\r\n    setSignupDetails(updatedDetails);\r\n\r\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\r\n      return tmpErrorHandler[obj].error;\r\n    });\r\n\r\n    if (verified) {\r\n      axios\r\n        .post(apiList.signup, updatedDetails)\r\n        .then((response) => {\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          localStorage.setItem(\"type\", response.data.type);\r\n          setLoggedin(isAuth());\r\n          setPopup({\r\n            open: true,\r\n            severity: \"success\",\r\n            message: \"Logged in successfully\",\r\n          });\r\n          console.log(response);\r\n        })\r\n        .catch((err) => {\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: err.response.data.message,\r\n          });\r\n          console.log(err.response);\r\n        });\r\n    } else {\r\n      setInputErrorHandler(tmpErrorHandler);\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"Incorrect Input\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleLoginRecruiter = () => {\r\n    const tmpErrorHandler = {};\r\n    Object.keys(inputErrorHandler).forEach((obj) => {\r\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\r\n        tmpErrorHandler[obj] = {\r\n          required: true,\r\n          untouched: false,\r\n          error: true,\r\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\r\n        };\r\n      } else {\r\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\r\n      }\r\n    });\r\n\r\n    let updatedDetails = {\r\n      ...signupDetails,\r\n    };\r\n    if (phone !== \"\") {\r\n      updatedDetails = {\r\n        ...signupDetails,\r\n        contactNumber: `+${phone}`,\r\n      };\r\n    } else {\r\n      updatedDetails = {\r\n        ...signupDetails,\r\n        contactNumber: \"\",\r\n      };\r\n    }\r\n\r\n    setSignupDetails(updatedDetails);\r\n\r\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\r\n      return tmpErrorHandler[obj].error;\r\n    });\r\n\r\n    console.log(updatedDetails);\r\n\r\n    if (verified) {\r\n      axios\r\n        .post(apiList.signup, updatedDetails)\r\n        .then((response) => {\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          localStorage.setItem(\"type\", response.data.type);\r\n          setLoggedin(isAuth());\r\n          setPopup({\r\n            open: true,\r\n            severity: \"success\",\r\n            message: \"Logged in successfully\",\r\n          });\r\n          console.log(response);\r\n        })\r\n        .catch((err) => {\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: err.response.data.message,\r\n          });\r\n          console.log(err.response);\r\n        });\r\n    } else {\r\n      setInputErrorHandler(tmpErrorHandler);\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"Incorrect Input\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return loggedin ? (\r\n    <Redirect to=\"/\" />\r\n  ) : (\r\n    <Paper elevation={3} className={classes.body}>\r\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\r\n        <Grid item>\r\n          <Typography variant=\"h3\" component=\"h2\">\r\n            Signup\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            select\r\n            label=\"Category\"\r\n            variant=\"outlined\"\r\n            className={classes.inputBox}\r\n            value={signupDetails.type}\r\n            onChange={(event) => {\r\n              handleInput(\"type\", event.target.value);\r\n            }}\r\n          >\r\n            <MenuItem value=\"applicant\">Applicant</MenuItem>\r\n            <MenuItem value=\"recruiter\">Recruiter</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item>\r\n          <TextField\r\n            label=\"Name\"\r\n            value={signupDetails.name}\r\n            onChange={(event) => handleInput(\"name\", event.target.value)}\r\n            className={classes.inputBox}\r\n            error={inputErrorHandler.name.error}\r\n            helperText={inputErrorHandler.name.message}\r\n            onBlur={(event) => {\r\n              if (event.target.value === \"\") {\r\n                handleInputError(\"name\", true, \"Name is required\");\r\n              } else {\r\n                handleInputError(\"name\", false, \"\");\r\n              }\r\n            }}\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <EmailInput\r\n            label=\"Email\"\r\n            value={signupDetails.email}\r\n            onChange={(event) => handleInput(\"email\", event.target.value)}\r\n            inputErrorHandler={inputErrorHandler}\r\n            handleInputError={handleInputError}\r\n            className={classes.inputBox}\r\n            required={true}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <PasswordInput\r\n            label=\"Password\"\r\n            value={signupDetails.password}\r\n            onChange={(event) => handleInput(\"password\", event.target.value)}\r\n            className={classes.inputBox}\r\n            error={inputErrorHandler.password.error}\r\n            helperText={inputErrorHandler.password.message}\r\n            onBlur={(event) => {\r\n              if (event.target.value === \"\") {\r\n                handleInputError(\"password\", true, \"Password is required\");\r\n              } else {\r\n                handleInputError(\"password\", false, \"\");\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        {signupDetails.type === \"applicant\" ? (\r\n          <>\r\n            <MultifieldInput\r\n              education={education}\r\n              setEducation={setEducation}\r\n            />\r\n            <Grid item>\r\n              <ChipInput\r\n                className={classes.inputBox}\r\n                label=\"Skills\"\r\n                variant=\"outlined\"\r\n                helperText=\"Press enter to add skills\"\r\n                onChange={(chips) =>\r\n                  setSignupDetails({ ...signupDetails, skills: chips })\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <FileUploadInput\r\n                className={classes.inputBox}\r\n                label=\"Resume (.pdf)\"\r\n                icon={<DescriptionIcon />}\r\n                // value={files.resume}\r\n                // onChange={(event) =>\r\n                //   setFiles({\r\n                //     ...files,\r\n                //     resume: event.target.files[0],\r\n                //   })\r\n                // }\r\n                uploadTo={apiList.uploadResume}\r\n                handleInput={handleInput}\r\n                identifier={\"resume\"}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <FileUploadInput\r\n                className={classes.inputBox}\r\n                label=\"Profile Photo (.jpg/.png)\"\r\n                icon={<FaceIcon />}\r\n                // value={files.profileImage}\r\n                // onChange={(event) =>\r\n                //   setFiles({\r\n                //     ...files,\r\n                //     profileImage: event.target.files[0],\r\n                //   })\r\n                // }\r\n                uploadTo={apiList.uploadProfileImage}\r\n                handleInput={handleInput}\r\n                identifier={\"profile\"}\r\n              />\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Grid item style={{ width: \"100%\" }}>\r\n              <TextField\r\n                label=\"Bio (upto 250 words)\"\r\n                multiline\r\n                rows={8}\r\n                style={{ width: \"100%\" }}\r\n                variant=\"outlined\"\r\n                value={signupDetails.bio}\r\n                onChange={(event) => {\r\n                  if (\r\n                    event.target.value.split(\" \").filter(function (n) {\r\n                      return n != \"\";\r\n                    }).length <= 250\r\n                  ) {\r\n                    handleInput(\"bio\", event.target.value);\r\n                  }\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <PhoneInput\r\n                country={\"in\"}\r\n                value={phone}\r\n                onChange={(phone) => setPhone(phone)}\r\n              />\r\n            </Grid>\r\n          </>\r\n        )}\r\n\r\n        <Grid item>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              signupDetails.type === \"applicant\"\r\n                ? handleLogin()\r\n                : handleLoginRecruiter();\r\n            }}\r\n            className={classes.submitButton}\r\n          >\r\n            Signup\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n// {/* <Grid item>\r\n//           <PasswordInput\r\n//             label=\"Re-enter Password\"\r\n//             value={signupDetails.tmpPassword}\r\n//             onChange={(event) => handleInput(\"tmpPassword\", event.target.value)}\r\n//             className={classes.inputBox}\r\n//             labelWidth={140}\r\n//             helperText={inputErrorHandler.tmpPassword.message}\r\n//             error={inputErrorHandler.tmpPassword.error}\r\n//             onBlur={(event) => {\r\n//               if (event.target.value !== signupDetails.password) {\r\n//                 handleInputError(\r\n//                   \"tmpPassword\",\r\n//                   true,\r\n//                   \"Passwords are not same.\"\r\n//                 );\r\n//               }\r\n//             }}\r\n//           />\r\n//         </Grid> */}\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  MenuItem,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport axios from \"axios\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\nimport { userType } from \"../lib/isAuth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst JobTile = (props) => {\r\n  const classes = useStyles();\r\n  const { job } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [sop, setSop] = useState(\"\");\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setSop(\"\");\r\n  };\r\n\r\n  const handleApply = () => {\r\n    console.log(job._id);\r\n    console.log(sop);\r\n    axios\r\n      .post(\r\n        `${apiList.jobs}/${job._id}/applications`,\r\n        {\r\n          sop: sop,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        handleClose();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        handleClose();\r\n      });\r\n  };\r\n\r\n  const deadline = new Date(job.deadline).toLocaleDateString();\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid container item xs={9} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">{job.title}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Rating value={job.rating !== -1 ? job.rating : null} readOnly />\r\n          </Grid>\r\n          <Grid item>Role : {job.jobType}</Grid>\r\n          <Grid item>Salary : &#8377; {job.salary} per month</Grid>\r\n          <Grid item>\r\n            Duration :{\" \"}\r\n            {job.duration !== 0 ? `${job.duration} month` : `Flexible`}\r\n          </Grid>\r\n          <Grid item>Posted By : {job.recruiter.name}</Grid>\r\n          <Grid item>Application Deadline : {deadline}</Grid>\r\n\r\n          <Grid item>\r\n            {job.skillsets.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={() => {\r\n              setOpen(true);\r\n            }}\r\n            disabled={userType() === \"recruiter\"}\r\n          >\r\n            Apply\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"50%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <TextField\r\n            label=\"Write SOP (upto 250 words)\"\r\n            multiline\r\n            rows={8}\r\n            style={{ width: \"100%\", marginBottom: \"30px\" }}\r\n            variant=\"outlined\"\r\n            value={sop}\r\n            onChange={(event) => {\r\n              if (\r\n                event.target.value.split(\" \").filter(function (n) {\r\n                  return n != \"\";\r\n                }).length <= 250\r\n              ) {\r\n                setSop(event.target.value);\r\n              }\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ padding: \"10px 50px\" }}\r\n            onClick={() => handleApply()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst FilterPopup = (props) => {\r\n  const classes = useStyles();\r\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\r\n  return (\r\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n      <Paper\r\n        style={{\r\n          padding: \"50px\",\r\n          outline: \"none\",\r\n          minWidth: \"50%\",\r\n        }}\r\n      >\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Job Type\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={9}\r\n              justify=\"space-around\"\r\n              // alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"fullTime\"\r\n                      checked={searchOptions.jobType.fullTime}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          jobType: {\r\n                            ...searchOptions.jobType,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Full Time\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"partTime\"\r\n                      checked={searchOptions.jobType.partTime}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          jobType: {\r\n                            ...searchOptions.jobType,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Part Time\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"wfh\"\r\n                      checked={searchOptions.jobType.wfh}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          jobType: {\r\n                            ...searchOptions.jobType,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Work From Home\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Salary\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <Slider\r\n                valueLabelDisplay=\"auto\"\r\n                valueLabelFormat={(value) => {\r\n                  return value * (100000 / 100);\r\n                }}\r\n                marks={[\r\n                  { value: 0, label: \"0\" },\r\n                  { value: 100, label: \"100000\" },\r\n                ]}\r\n                value={searchOptions.salary}\r\n                onChange={(event, value) =>\r\n                  setSearchOptions({\r\n                    ...searchOptions,\r\n                    salary: value,\r\n                  })\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Duration\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <TextField\r\n                select\r\n                label=\"Duration\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={searchOptions.duration}\r\n                onChange={(event) =>\r\n                  setSearchOptions({\r\n                    ...searchOptions,\r\n                    duration: event.target.value,\r\n                  })\r\n                }\r\n              >\r\n                <MenuItem value=\"0\">All</MenuItem>\r\n                <MenuItem value=\"1\">1</MenuItem>\r\n                <MenuItem value=\"2\">2</MenuItem>\r\n                <MenuItem value=\"3\">3</MenuItem>\r\n                <MenuItem value=\"4\">4</MenuItem>\r\n                <MenuItem value=\"5\">5</MenuItem>\r\n                <MenuItem value=\"6\">6</MenuItem>\r\n                <MenuItem value=\"7\">7</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Sort\r\n            </Grid>\r\n            <Grid item container direction=\"row\" xs={9}>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"salary\"\r\n                    checked={searchOptions.sort.salary.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          salary: {\r\n                            ...searchOptions.sort.salary,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"salary\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"salary\">\r\n                    <Typography>Salary</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.salary.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          salary: {\r\n                            ...searchOptions.sort.salary,\r\n                            desc: !searchOptions.sort.salary.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.salary.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"duration\"\r\n                    checked={searchOptions.sort.duration.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          duration: {\r\n                            ...searchOptions.sort.duration,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"duration\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"duration\">\r\n                    <Typography>Duration</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.duration.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          duration: {\r\n                            ...searchOptions.sort.duration,\r\n                            desc: !searchOptions.sort.duration.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.duration.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"rating\"\r\n                    checked={searchOptions.sort.rating.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          rating: {\r\n                            ...searchOptions.sort.rating,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"rating\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"rating\">\r\n                    <Typography>Rating</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.rating.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          rating: {\r\n                            ...searchOptions.sort.rating,\r\n                            desc: !searchOptions.sort.rating.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.rating.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\" }}\r\n              onClick={() => getData()}\r\n            >\r\n              Apply\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst Home = (props) => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    query: \"\",\r\n    jobType: {\r\n      fullTime: false,\r\n      partTime: false,\r\n      wfh: false,\r\n    },\r\n    salary: [0, 100],\r\n    duration: \"0\",\r\n    sort: {\r\n      salary: {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      duration: {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      rating: {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  const setPopup = useContext(SetPopupContext);\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    let searchParams = [];\r\n    if (searchOptions.query !== \"\") {\r\n      searchParams = [...searchParams, `q=${searchOptions.query}`];\r\n    }\r\n    if (searchOptions.jobType.fullTime) {\r\n      searchParams = [...searchParams, `jobType=Full%20Time`];\r\n    }\r\n    if (searchOptions.jobType.partTime) {\r\n      searchParams = [...searchParams, `jobType=Part%20Time`];\r\n    }\r\n    if (searchOptions.jobType.wfh) {\r\n      searchParams = [...searchParams, `jobType=Work%20From%20Home`];\r\n    }\r\n    if (searchOptions.salary[0] != 0) {\r\n      searchParams = [\r\n        ...searchParams,\r\n        `salaryMin=${searchOptions.salary[0] * 1000}`,\r\n      ];\r\n    }\r\n    if (searchOptions.salary[1] != 100) {\r\n      searchParams = [\r\n        ...searchParams,\r\n        `salaryMax=${searchOptions.salary[1] * 1000}`,\r\n      ];\r\n    }\r\n    if (searchOptions.duration != \"0\") {\r\n      searchParams = [...searchParams, `duration=${searchOptions.duration}`];\r\n    }\r\n\r\n    let asc = [],\r\n      desc = [];\r\n\r\n    Object.keys(searchOptions.sort).forEach((obj) => {\r\n      const item = searchOptions.sort[obj];\r\n      if (item.status) {\r\n        if (item.desc) {\r\n          desc = [...desc, `desc=${obj}`];\r\n        } else {\r\n          asc = [...asc, `asc=${obj}`];\r\n        }\r\n      }\r\n    });\r\n    searchParams = [...searchParams, ...asc, ...desc];\r\n    const queryString = searchParams.join(\"&\");\r\n    console.log(queryString);\r\n    let address = apiList.jobs;\r\n    if (queryString !== \"\") {\r\n      address = `${address}?${queryString}`;\r\n    }\r\n\r\n    axios\r\n      .get(address, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setJobs(\r\n          response.data.filter((obj) => {\r\n            const today = new Date();\r\n            const deadline = new Date(obj.deadline);\r\n            return deadline > today;\r\n          })\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs>\r\n            <Typography variant=\"h2\">Jobs</Typography>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField\r\n              label=\"Search Jobs\"\r\n              value={searchOptions.query}\r\n              onChange={(event) =>\r\n                setSearchOptions({\r\n                  ...searchOptions,\r\n                  query: event.target.value,\r\n                })\r\n              }\r\n              onKeyPress={(ev) => {\r\n                if (ev.key === \"Enter\") {\r\n                  getData();\r\n                }\r\n              }}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment>\r\n                    <IconButton onClick={() => getData()}>\r\n                      <SearchIcon />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              style={{ width: \"500px\" }}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <IconButton onClick={() => setFilterOpen(true)}>\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          item\r\n          xs\r\n          direction=\"column\"\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n        >\r\n          {jobs.length > 0 ? (\r\n            jobs.map((job) => {\r\n              return <JobTile job={job} />;\r\n            })\r\n          ) : (\r\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n              No jobs found\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n        {/* <Grid item>\r\n          <Pagination count={10} color=\"primary\" />\r\n        </Grid> */}\r\n      </Grid>\r\n      <FilterPopup\r\n        open={filterOpen}\r\n        searchOptions={searchOptions}\r\n        setSearchOptions={setSearchOptions}\r\n        handleClose={() => setFilterOpen(false)}\r\n        getData={() => {\r\n          getData();\r\n          setFilterOpen(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  MenuItem,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport axios from \"axios\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst ApplicationTile = (props) => {\r\n  const classes = useStyles();\r\n  const { application } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [open, setOpen] = useState(false);\r\n  const [rating, setRating] = useState(application.job.rating);\r\n\r\n  const appliedOn = new Date(application.dateOfApplication);\r\n  const joinedOn = new Date(application.dateOfJoining);\r\n\r\n  const fetchRating = () => {\r\n    axios\r\n      .get(`${apiList.rating}?id=${application.job._id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setRating(response.data.rating);\r\n        console.log(response.data);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const changeRating = () => {\r\n    axios\r\n      .put(\r\n        apiList.rating,\r\n        { rating: rating, jobId: application.job._id },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: \"Rating updated successfully\",\r\n        });\r\n        fetchRating();\r\n        setOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        console.log(err);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        fetchRating();\r\n        setOpen(false);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const colorSet = {\r\n    applied: \"#3454D1\",\r\n    shortlisted: \"#DC851F\",\r\n    accepted: \"#09BC8A\",\r\n    rejected: \"#D1345B\",\r\n    deleted: \"#B49A67\",\r\n    cancelled: \"#FF8484\",\r\n    finished: \"#4EA5D9\",\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid container item xs={9} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">{application.job.title}</Typography>\r\n          </Grid>\r\n          <Grid item>Posted By: {application.recruiter.name}</Grid>\r\n          <Grid item>Role : {application.job.jobType}</Grid>\r\n          <Grid item>Salary : &#8377; {application.job.salary} per month</Grid>\r\n          <Grid item>\r\n            Duration :{\" \"}\r\n            {application.job.duration !== 0\r\n              ? `${application.job.duration} month`\r\n              : `Flexible`}\r\n          </Grid>\r\n          <Grid item>\r\n            {application.job.skillsets.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\r\n          {application.status === \"accepted\" ||\r\n          application.status === \"finished\" ? (\r\n            <Grid item>Joined On: {joinedOn.toLocaleDateString()}</Grid>\r\n          ) : null}\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={3}>\r\n          <Grid item xs>\r\n            <Paper\r\n              className={classes.statusBlock}\r\n              style={{\r\n                background: colorSet[application.status],\r\n                color: \"#ffffff\",\r\n              }}\r\n            >\r\n              {application.status}\r\n            </Paper>\r\n          </Grid>\r\n          {application.status === \"accepted\" ||\r\n          application.status === \"finished\" ? (\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.statusBlock}\r\n                onClick={() => {\r\n                  fetchRating();\r\n                  setOpen(true);\r\n                }}\r\n              >\r\n                Rate Job\r\n              </Button>\r\n            </Grid>\r\n          ) : null}\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Rating\r\n            name=\"simple-controlled\"\r\n            style={{ marginBottom: \"30px\" }}\r\n            value={rating === -1 ? null : rating}\r\n            onChange={(event, newValue) => {\r\n              setRating(newValue);\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ padding: \"10px 50px\" }}\r\n            onClick={() => changeRating()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst Applications = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [applications, setApplications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(apiList.applications, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setApplications(response.data);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      item\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n    >\r\n      <Grid item>\r\n        <Typography variant=\"h2\">Applications</Typography>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        item\r\n        xs\r\n        direction=\"column\"\r\n        style={{ width: \"100%\" }}\r\n        alignItems=\"stretch\"\r\n        justify=\"center\"\r\n      >\r\n        {applications.length > 0 ? (\r\n          applications.map((obj) => (\r\n            <Grid item>\r\n              <ApplicationTile application={obj} />\r\n            </Grid>\r\n          ))\r\n        ) : (\r\n          <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n            No Applications Found\r\n          </Typography>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Applications;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Modal,\r\n  Paper,\r\n  makeStyles,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport FileUploadInput from \"../lib/FileUploadInput\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\n\r\nimport { SetPopupContext } from \"../App\";\r\n\r\nimport apiList from \"../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // padding: \"30px\",\r\n  },\r\n}));\r\n\r\nconst MultifieldInput = (props) => {\r\n  const classes = useStyles();\r\n  const { education, setEducation } = props;\r\n\r\n  return (\r\n    <>\r\n      {education.map((obj, key) => (\r\n        <Grid item container className={classes.inputBox} key={key}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              label={`Institution Name #${key + 1}`}\r\n              value={education[key].institutionName}\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].institutionName = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              label=\"Start Year\"\r\n              value={obj.startYear}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].startYear = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              label=\"End Year\"\r\n              value={obj.endYear}\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              onChange={(event) => {\r\n                const newEdu = [...education];\r\n                newEdu[key].endYear = event.target.value;\r\n                setEducation(newEdu);\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      ))}\r\n      <Grid item style={{ alignSelf: \"center\" }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() =>\r\n            setEducation([\r\n              ...education,\r\n              {\r\n                institutionName: \"\",\r\n                startYear: \"\",\r\n                endYear: \"\",\r\n              },\r\n            ])\r\n          }\r\n          className={classes.inputBox}\r\n        >\r\n          Add another institution details\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Profile = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [userData, setUserData] = useState();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [profileDetails, setProfileDetails] = useState({\r\n    name: \"\",\r\n    education: [],\r\n    skills: [],\r\n    resume: \"\",\r\n    profile: \"\",\r\n  });\r\n\r\n  const [education, setEducation] = useState([\r\n    {\r\n      institutionName: \"\",\r\n      startYear: \"\",\r\n      endYear: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleInput = (key, value) => {\r\n    setProfileDetails({\r\n      ...profileDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(apiList.user, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setProfileDetails(response.data);\r\n        if (response.data.education.length > 0) {\r\n          setEducation(\r\n            response.data.education.map((edu) => ({\r\n              institutionName: edu.institutionName ? edu.institutionName : \"\",\r\n              startYear: edu.startYear ? edu.startYear : \"\",\r\n              endYear: edu.endYear ? edu.endYear : \"\",\r\n            }))\r\n          );\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const editDetails = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    console.log(education);\r\n\r\n    let updatedDetails = {\r\n      ...profileDetails,\r\n      education: education\r\n        .filter((obj) => obj.institutionName.trim() !== \"\")\r\n        .map((obj) => {\r\n          if (obj[\"endYear\"] === \"\") {\r\n            delete obj[\"endYear\"];\r\n          }\r\n          return obj;\r\n        }),\r\n    };\r\n\r\n    axios\r\n      .put(apiList.user, updatedDetails, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n      });\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Profile</Typography>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Paper\r\n            style={{\r\n              padding: \"20px\",\r\n              outline: \"none\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Grid container direction=\"column\" alignItems=\"stretch\" spacing={3}>\r\n              <Grid item>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  value={profileDetails.name}\r\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\r\n                  className={classes.inputBox}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <MultifieldInput\r\n                education={education}\r\n                setEducation={setEducation}\r\n              />\r\n              <Grid item>\r\n                <ChipInput\r\n                  className={classes.inputBox}\r\n                  label=\"Skills\"\r\n                  variant=\"outlined\"\r\n                  helperText=\"Press enter to add skills\"\r\n                  value={profileDetails.skills}\r\n                  onAdd={(chip) =>\r\n                    setProfileDetails({\r\n                      ...profileDetails,\r\n                      skills: [...profileDetails.skills, chip],\r\n                    })\r\n                  }\r\n                  onDelete={(chip, index) => {\r\n                    let skills = profileDetails.skills;\r\n                    skills.splice(index, 1);\r\n                    setProfileDetails({\r\n                      ...profileDetails,\r\n                      skills: skills,\r\n                    });\r\n                  }}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FileUploadInput\r\n                  className={classes.inputBox}\r\n                  label=\"Resume (.pdf)\"\r\n                  icon={<DescriptionIcon />}\r\n                  uploadTo={apiList.uploadResume}\r\n                  handleInput={handleInput}\r\n                  identifier={\"resume\"}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FileUploadInput\r\n                  className={classes.inputBox}\r\n                  label=\"Profile Photo (.jpg/.png)\"\r\n                  icon={<FaceIcon />}\r\n                  uploadTo={apiList.uploadProfileImage}\r\n                  handleInput={handleInput}\r\n                  identifier={\"profile\"}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\r\n              onClick={() => handleUpdate()}\r\n            >\r\n              Update Details\r\n            </Button>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      {/* <Modal open={open} onClose={handleClose} className={classes.popupDialog}> */}\r\n\r\n      {/* </Modal> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Modal,\r\n  Paper,\r\n  makeStyles,\r\n  TextField,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // padding: \"30px\",\r\n  },\r\n}));\r\n\r\nconst CreateJobs = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [jobDetails, setJobDetails] = useState({\r\n    title: \"\",\r\n    maxApplicants: 100,\r\n    maxPositions: 30,\r\n    deadline: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000)\r\n      .toISOString()\r\n      .substr(0, 16),\r\n    skillsets: [],\r\n    jobType: \"Full Time\",\r\n    duration: 0,\r\n    salary: 0,\r\n  });\r\n\r\n  const handleInput = (key, value) => {\r\n    setJobDetails({\r\n      ...jobDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    console.log(jobDetails);\r\n    axios\r\n      .post(apiList.jobs, jobDetails, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        setJobDetails({\r\n          title: \"\",\r\n          maxApplicants: 100,\r\n          maxPositions: 30,\r\n          deadline: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000)\r\n            .toISOString()\r\n            .substr(0, 16),\r\n          skillsets: [],\r\n          jobType: \"Full Time\",\r\n          duration: 0,\r\n          salary: 0,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\", width: \"\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Add Job</Typography>\r\n        </Grid>\r\n        <Grid item container xs direction=\"column\" justify=\"center\">\r\n          <Grid item>\r\n            <Paper\r\n              style={{\r\n                padding: \"20px\",\r\n                outline: \"none\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n                alignItems=\"stretch\"\r\n                spacing={3}\r\n              >\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Title\"\r\n                    value={jobDetails.title}\r\n                    onChange={(event) =>\r\n                      handleInput(\"title\", event.target.value)\r\n                    }\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <ChipInput\r\n                    className={classes.inputBox}\r\n                    label=\"Skills\"\r\n                    variant=\"outlined\"\r\n                    helperText=\"Press enter to add skills\"\r\n                    value={jobDetails.skillsets}\r\n                    onAdd={(chip) =>\r\n                      setJobDetails({\r\n                        ...jobDetails,\r\n                        skillsets: [...jobDetails.skillsets, chip],\r\n                      })\r\n                    }\r\n                    onDelete={(chip, index) => {\r\n                      let skillsets = jobDetails.skillsets;\r\n                      skillsets.splice(index, 1);\r\n                      setJobDetails({\r\n                        ...jobDetails,\r\n                        skillsets: skillsets,\r\n                      });\r\n                    }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    select\r\n                    label=\"Job Type\"\r\n                    variant=\"outlined\"\r\n                    value={jobDetails.jobType}\r\n                    onChange={(event) => {\r\n                      handleInput(\"jobType\", event.target.value);\r\n                    }}\r\n                    fullWidth\r\n                  >\r\n                    <MenuItem value=\"Full Time\">Full Time</MenuItem>\r\n                    <MenuItem value=\"Part Time\">Part Time</MenuItem>\r\n                    <MenuItem value=\"Work From Home\">Work From Home</MenuItem>\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    select\r\n                    label=\"Duration\"\r\n                    variant=\"outlined\"\r\n                    value={jobDetails.duration}\r\n                    onChange={(event) => {\r\n                      handleInput(\"duration\", event.target.value);\r\n                    }}\r\n                    fullWidth\r\n                  >\r\n                    <MenuItem value={0}>Flexible</MenuItem>\r\n                    <MenuItem value={1}>1 Month</MenuItem>\r\n                    <MenuItem value={2}>2 Months</MenuItem>\r\n                    <MenuItem value={3}>3 Months</MenuItem>\r\n                    <MenuItem value={4}>4 Months</MenuItem>\r\n                    <MenuItem value={5}>5 Months</MenuItem>\r\n                    <MenuItem value={6}>6 Months</MenuItem>\r\n                  </TextField>\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Salary\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    value={jobDetails.salary}\r\n                    onChange={(event) => {\r\n                      handleInput(\"salary\", event.target.value);\r\n                    }}\r\n                    InputProps={{ inputProps: { min: 0 } }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Application Deadline\"\r\n                    type=\"datetime-local\"\r\n                    value={jobDetails.deadline}\r\n                    onChange={(event) => {\r\n                      handleInput(\"deadline\", event.target.value);\r\n                    }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Maximum Number Of Applicants\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    value={jobDetails.maxApplicants}\r\n                    onChange={(event) => {\r\n                      handleInput(\"maxApplicants\", event.target.value);\r\n                    }}\r\n                    InputProps={{ inputProps: { min: 1 } }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    label=\"Positions Available\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    value={jobDetails.maxPositions}\r\n                    onChange={(event) => {\r\n                      handleInput(\"maxPositions\", event.target.value);\r\n                    }}\r\n                    InputProps={{ inputProps: { min: 1 } }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\r\n                onClick={() => handleUpdate()}\r\n              >\r\n                Create Job\r\n              </Button>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateJobs;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  MenuItem,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport axios from \"axios\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  button: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n}));\r\n\r\nconst JobTile = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const { job, getData } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [openUpdate, setOpenUpdate] = useState(false);\r\n  const [jobDetails, setJobDetails] = useState(job);\r\n\r\n  console.log(jobDetails);\r\n\r\n  const handleInput = (key, value) => {\r\n    setJobDetails({\r\n      ...jobDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  const handleClick = (location) => {\r\n    history.push(location);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCloseUpdate = () => {\r\n    setOpenUpdate(false);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    console.log(job._id);\r\n    axios\r\n      .delete(`${apiList.jobs}/${job._id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n        handleClose();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        handleClose();\r\n      });\r\n  };\r\n\r\n  const handleJobUpdate = () => {\r\n    axios\r\n      .put(`${apiList.jobs}/${job._id}`, jobDetails, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n        handleCloseUpdate();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        handleCloseUpdate();\r\n      });\r\n  };\r\n\r\n  const postedOn = new Date(job.dateOfPosting);\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid container item xs={9} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">{job.title}</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Rating value={job.rating !== -1 ? job.rating : null} readOnly />\r\n          </Grid>\r\n          <Grid item>Role : {job.jobType}</Grid>\r\n          <Grid item>Salary : &#8377; {job.salary} per month</Grid>\r\n          <Grid item>\r\n            Duration :{\" \"}\r\n            {job.duration !== 0 ? `${job.duration} month` : `Flexible`}\r\n          </Grid>\r\n          <Grid item>Date Of Posting: {postedOn.toLocaleDateString()}</Grid>\r\n          <Grid item>Number of Applicants: {job.maxApplicants}</Grid>\r\n          <Grid item>\r\n            Remaining Number of Positions:{\" \"}\r\n            {job.maxPositions - job.acceptedCandidates}\r\n          </Grid>\r\n          <Grid item>\r\n            {job.skillsets.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={3}>\r\n          <Grid item xs>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.statusBlock}\r\n              onClick={() => handleClick(`/job/applications/${job._id}`)}\r\n            >\r\n              View Applications\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.statusBlock}\r\n              onClick={() => {\r\n                setOpenUpdate(true);\r\n              }}\r\n              style={{\r\n                background: \"#FC7A1E\",\r\n                color: \"#fff\",\r\n              }}\r\n            >\r\n              Update Details\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              className={classes.statusBlock}\r\n              onClick={() => {\r\n                setOpen(true);\r\n              }}\r\n            >\r\n              Delete Job\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\r\n            Are you sure?\r\n          </Typography>\r\n          <Grid container justify=\"center\" spacing={5}>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleDelete()}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleClose()}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Modal>\r\n      <Modal\r\n        open={openUpdate}\r\n        onClose={handleCloseUpdate}\r\n        className={classes.popupDialog}\r\n      >\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\r\n            Update Details\r\n          </Typography>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            spacing={3}\r\n            style={{ margin: \"10px\" }}\r\n          >\r\n            <Grid item>\r\n              <TextField\r\n                label=\"Application Deadline\"\r\n                type=\"datetime-local\"\r\n                value={jobDetails.deadline.substr(0, 16)}\r\n                onChange={(event) => {\r\n                  handleInput(\"deadline\", event.target.value);\r\n                }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                label=\"Maximum Number Of Applicants\"\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                value={jobDetails.maxApplicants}\r\n                onChange={(event) => {\r\n                  handleInput(\"maxApplicants\", event.target.value);\r\n                }}\r\n                InputProps={{ inputProps: { min: 1 } }}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                label=\"Positions Available\"\r\n                type=\"number\"\r\n                variant=\"outlined\"\r\n                value={jobDetails.maxPositions}\r\n                onChange={(event) => {\r\n                  handleInput(\"maxPositions\", event.target.value);\r\n                }}\r\n                InputProps={{ inputProps: { min: 1 } }}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\" spacing={5}>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleJobUpdate()}\r\n              >\r\n                Update\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleCloseUpdate()}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst FilterPopup = (props) => {\r\n  const classes = useStyles();\r\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\r\n  return (\r\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n      <Paper\r\n        style={{\r\n          padding: \"50px\",\r\n          outline: \"none\",\r\n          minWidth: \"50%\",\r\n        }}\r\n      >\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Job Type\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={9}\r\n              justify=\"space-around\"\r\n              // alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"fullTime\"\r\n                      checked={searchOptions.jobType.fullTime}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          jobType: {\r\n                            ...searchOptions.jobType,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Full Time\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"partTime\"\r\n                      checked={searchOptions.jobType.partTime}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          jobType: {\r\n                            ...searchOptions.jobType,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Part Time\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"wfh\"\r\n                      checked={searchOptions.jobType.wfh}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          jobType: {\r\n                            ...searchOptions.jobType,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Work From Home\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Salary\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <Slider\r\n                valueLabelDisplay=\"auto\"\r\n                valueLabelFormat={(value) => {\r\n                  return value * (100000 / 100);\r\n                }}\r\n                marks={[\r\n                  { value: 0, label: \"0\" },\r\n                  { value: 100, label: \"100000\" },\r\n                ]}\r\n                value={searchOptions.salary}\r\n                onChange={(event, value) =>\r\n                  setSearchOptions({\r\n                    ...searchOptions,\r\n                    salary: value,\r\n                  })\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Duration\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n              <TextField\r\n                select\r\n                label=\"Duration\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={searchOptions.duration}\r\n                onChange={(event) =>\r\n                  setSearchOptions({\r\n                    ...searchOptions,\r\n                    duration: event.target.value,\r\n                  })\r\n                }\r\n              >\r\n                <MenuItem value=\"0\">All</MenuItem>\r\n                <MenuItem value=\"1\">1</MenuItem>\r\n                <MenuItem value=\"2\">2</MenuItem>\r\n                <MenuItem value=\"3\">3</MenuItem>\r\n                <MenuItem value=\"4\">4</MenuItem>\r\n                <MenuItem value=\"5\">5</MenuItem>\r\n                <MenuItem value=\"6\">6</MenuItem>\r\n                <MenuItem value=\"7\">7</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Sort\r\n            </Grid>\r\n            <Grid item container direction=\"row\" xs={9}>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"salary\"\r\n                    checked={searchOptions.sort.salary.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          salary: {\r\n                            ...searchOptions.sort.salary,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"salary\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"salary\">\r\n                    <Typography>Salary</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.salary.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          salary: {\r\n                            ...searchOptions.sort.salary,\r\n                            desc: !searchOptions.sort.salary.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.salary.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"duration\"\r\n                    checked={searchOptions.sort.duration.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          duration: {\r\n                            ...searchOptions.sort.duration,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"duration\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"duration\">\r\n                    <Typography>Duration</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.duration.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          duration: {\r\n                            ...searchOptions.sort.duration,\r\n                            desc: !searchOptions.sort.duration.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.duration.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"rating\"\r\n                    checked={searchOptions.sort.rating.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          rating: {\r\n                            ...searchOptions.sort.rating,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"rating\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"rating\">\r\n                    <Typography>Rating</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.rating.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          rating: {\r\n                            ...searchOptions.sort.rating,\r\n                            desc: !searchOptions.sort.rating.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.rating.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\" }}\r\n              onClick={() => getData()}\r\n            >\r\n              Apply\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst MyJobs = (props) => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    query: \"\",\r\n    jobType: {\r\n      fullTime: false,\r\n      partTime: false,\r\n      wfh: false,\r\n    },\r\n    salary: [0, 100],\r\n    duration: \"0\",\r\n    sort: {\r\n      salary: {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      duration: {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      rating: {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  const setPopup = useContext(SetPopupContext);\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    let searchParams = [`myjobs=1`];\r\n    if (searchOptions.query !== \"\") {\r\n      searchParams = [...searchParams, `q=${searchOptions.query}`];\r\n    }\r\n    if (searchOptions.jobType.fullTime) {\r\n      searchParams = [...searchParams, `jobType=Full%20Time`];\r\n    }\r\n    if (searchOptions.jobType.partTime) {\r\n      searchParams = [...searchParams, `jobType=Part%20Time`];\r\n    }\r\n    if (searchOptions.jobType.wfh) {\r\n      searchParams = [...searchParams, `jobType=Work%20From%20Home`];\r\n    }\r\n    if (searchOptions.salary[0] != 0) {\r\n      searchParams = [\r\n        ...searchParams,\r\n        `salaryMin=${searchOptions.salary[0] * 1000}`,\r\n      ];\r\n    }\r\n    if (searchOptions.salary[1] != 100) {\r\n      searchParams = [\r\n        ...searchParams,\r\n        `salaryMax=${searchOptions.salary[1] * 1000}`,\r\n      ];\r\n    }\r\n    if (searchOptions.duration != \"0\") {\r\n      searchParams = [...searchParams, `duration=${searchOptions.duration}`];\r\n    }\r\n\r\n    let asc = [],\r\n      desc = [];\r\n\r\n    Object.keys(searchOptions.sort).forEach((obj) => {\r\n      const item = searchOptions.sort[obj];\r\n      if (item.status) {\r\n        if (item.desc) {\r\n          desc = [...desc, `desc=${obj}`];\r\n        } else {\r\n          asc = [...asc, `asc=${obj}`];\r\n        }\r\n      }\r\n    });\r\n    searchParams = [...searchParams, ...asc, ...desc];\r\n    const queryString = searchParams.join(\"&\");\r\n    console.log(queryString);\r\n    let address = apiList.jobs;\r\n    if (queryString !== \"\") {\r\n      address = `${address}?${queryString}`;\r\n    }\r\n\r\n    console.log(address);\r\n    axios\r\n      .get(address, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setJobs(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid\r\n          item\r\n          container\r\n          direction=\"column\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item xs>\r\n            <Typography variant=\"h2\">My Jobs</Typography>\r\n          </Grid>\r\n          <Grid item xs>\r\n            <TextField\r\n              label=\"Search Jobs\"\r\n              value={searchOptions.query}\r\n              onChange={(event) =>\r\n                setSearchOptions({\r\n                  ...searchOptions,\r\n                  query: event.target.value,\r\n                })\r\n              }\r\n              onKeyPress={(ev) => {\r\n                if (ev.key === \"Enter\") {\r\n                  getData();\r\n                }\r\n              }}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment>\r\n                    <IconButton onClick={() => getData()}>\r\n                      <SearchIcon />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              style={{ width: \"500px\" }}\r\n              variant=\"outlined\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <IconButton onClick={() => setFilterOpen(true)}>\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          item\r\n          xs\r\n          direction=\"column\"\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n        >\r\n          {jobs.length > 0 ? (\r\n            jobs.map((job) => {\r\n              return <JobTile job={job} getData={getData} />;\r\n            })\r\n          ) : (\r\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n              No jobs found\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <FilterPopup\r\n        open={filterOpen}\r\n        searchOptions={searchOptions}\r\n        setSearchOptions={setSearchOptions}\r\n        handleClose={() => setFilterOpen(false)}\r\n        getData={() => {\r\n          getData();\r\n          setFilterOpen(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyJobs;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  MenuItem,\r\n  Checkbox,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport axios from \"axios\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList, { server } from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(17),\r\n    height: theme.spacing(17),\r\n  },\r\n}));\r\n\r\nconst FilterPopup = (props) => {\r\n  const classes = useStyles();\r\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\r\n  return (\r\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n      <Paper\r\n        style={{\r\n          padding: \"50px\",\r\n          outline: \"none\",\r\n          minWidth: \"50%\",\r\n        }}\r\n      >\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Application Status\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={9}\r\n              justify=\"space-around\"\r\n              // alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"rejected\"\r\n                      checked={searchOptions.status.rejected}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Rejected\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"applied\"\r\n                      checked={searchOptions.status.applied}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Applied\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"shortlisted\"\r\n                      checked={searchOptions.status.shortlisted}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Shortlisted\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Sort\r\n            </Grid>\r\n            <Grid item container direction=\"row\" xs={9}>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"name\"\r\n                    checked={searchOptions.sort[\"jobApplicant.name\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.name\": {\r\n                            ...searchOptions.sort[\"jobApplicant.name\"],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"name\">\r\n                    <Typography>Name</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"jobApplicant.name\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.name\": {\r\n                            ...searchOptions.sort[\"jobApplicant.name\"],\r\n                            desc: !searchOptions.sort[\"jobApplicant.name\"].desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"jobApplicant.name\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"dateOfApplication\"\r\n                    checked={searchOptions.sort.dateOfApplication.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          dateOfApplication: {\r\n                            ...searchOptions.sort.dateOfApplication,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"dateOfApplication\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"dateOfApplication\">\r\n                    <Typography>Date of Application</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.dateOfApplication.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          dateOfApplication: {\r\n                            ...searchOptions.sort.dateOfApplication,\r\n                            desc: !searchOptions.sort.dateOfApplication.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.dateOfApplication.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={4}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"rating\"\r\n                    checked={searchOptions.sort[\"jobApplicant.rating\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.rating\": {\r\n                            ...searchOptions.sort[[\"jobApplicant.rating\"]],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"rating\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"rating\">\r\n                    <Typography>Rating</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"jobApplicant.rating\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.rating\": {\r\n                            ...searchOptions.sort[\"jobApplicant.rating\"],\r\n                            desc: !searchOptions.sort[\"jobApplicant.rating\"]\r\n                              .desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"jobApplicant.rating\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\" }}\r\n              onClick={() => getData()}\r\n            >\r\n              Apply\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ApplicationTile = (props) => {\r\n  const classes = useStyles();\r\n  const { application, getData } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const appliedOn = new Date(application.dateOfApplication);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const colorSet = {\r\n    applied: \"#3454D1\",\r\n    shortlisted: \"#DC851F\",\r\n    accepted: \"#09BC8A\",\r\n    rejected: \"#D1345B\",\r\n    deleted: \"#B49A67\",\r\n    cancelled: \"#FF8484\",\r\n    finished: \"#4EA5D9\",\r\n  };\r\n\r\n  const getResume = () => {\r\n    if (\r\n      application.jobApplicant.resume &&\r\n      application.jobApplicant.resume !== \"\"\r\n    ) {\r\n      const address = `${server}${application.jobApplicant.resume}`;\r\n      console.log(address);\r\n      axios(address, {\r\n        method: \"GET\",\r\n        responseType: \"blob\",\r\n      })\r\n        .then((response) => {\r\n          const file = new Blob([response.data], { type: \"application/pdf\" });\r\n          const fileURL = URL.createObjectURL(file);\r\n          window.open(fileURL);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: \"Error\",\r\n          });\r\n        });\r\n    } else {\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"No resume found\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateStatus = (status) => {\r\n    const address = `${apiList.applications}/${application._id}`;\r\n    const statusData = {\r\n      status: status,\r\n      dateOfJoining: new Date().toISOString(),\r\n    };\r\n    axios\r\n      .put(address, statusData, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  const buttonSet = {\r\n    applied: (\r\n      <>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"shortlisted\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"shortlisted\")}\r\n          >\r\n            Shortlist\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"rejected\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"rejected\")}\r\n          >\r\n            Reject\r\n          </Button>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    shortlisted: (\r\n      <>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"accepted\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"accepted\")}\r\n          >\r\n            Accept\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Button\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"rejected\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={() => updateStatus(\"rejected\")}\r\n          >\r\n            Reject\r\n          </Button>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    rejected: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"rejected\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Rejected\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    accepted: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"accepted\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Accepted\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    cancelled: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"cancelled\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Cancelled\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n    finished: (\r\n      <>\r\n        <Grid item xs>\r\n          <Paper\r\n            className={classes.statusBlock}\r\n            style={{\r\n              background: colorSet[\"finished\"],\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            Finished\r\n          </Paper>\r\n        </Grid>\r\n      </>\r\n    ),\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar\r\n            src={`${server}${application.jobApplicant.profile}`}\r\n            className={classes.avatar}\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={7} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">\r\n              {application.jobApplicant.name}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Rating\r\n              value={\r\n                application.jobApplicant.rating !== -1\r\n                  ? application.jobApplicant.rating\r\n                  : null\r\n              }\r\n              readOnly\r\n            />\r\n          </Grid>\r\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\r\n          <Grid item>\r\n            Education:{\" \"}\r\n            {application.jobApplicant.education\r\n              .map((edu) => {\r\n                return `${edu.institutionName} (${edu.startYear}-${\r\n                  edu.endYear ? edu.endYear : \"Ongoing\"\r\n                })`;\r\n              })\r\n              .join(\", \")}\r\n          </Grid>\r\n          <Grid item>\r\n            SOP: {application.sop !== \"\" ? application.sop : \"Not Submitted\"}\r\n          </Grid>\r\n          <Grid item>\r\n            {application.jobApplicant.skills.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={3}>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.statusBlock}\r\n              color=\"primary\"\r\n              onClick={() => getResume()}\r\n            >\r\n              Download Resume\r\n            </Button>\r\n          </Grid>\r\n          <Grid item container xs>\r\n            {buttonSet[application.status]}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ padding: \"10px 50px\" }}\r\n            // onClick={() => changeRating()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst JobApplications = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [applications, setApplications] = useState([]);\r\n  const { jobId } = useParams();\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    status: {\r\n      all: false,\r\n      applied: false,\r\n      shortlisted: false,\r\n    },\r\n    sort: {\r\n      \"jobApplicant.name\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      dateOfApplication: {\r\n        status: true,\r\n        desc: true,\r\n      },\r\n      \"jobApplicant.rating\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    let searchParams = [];\r\n\r\n    if (searchOptions.status.rejected) {\r\n      searchParams = [...searchParams, `status=rejected`];\r\n    }\r\n    if (searchOptions.status.applied) {\r\n      searchParams = [...searchParams, `status=applied`];\r\n    }\r\n    if (searchOptions.status.shortlisted) {\r\n      searchParams = [...searchParams, `status=shortlisted`];\r\n    }\r\n\r\n    let asc = [],\r\n      desc = [];\r\n\r\n    Object.keys(searchOptions.sort).forEach((obj) => {\r\n      const item = searchOptions.sort[obj];\r\n      if (item.status) {\r\n        if (item.desc) {\r\n          desc = [...desc, `desc=${obj}`];\r\n        } else {\r\n          asc = [...asc, `asc=${obj}`];\r\n        }\r\n      }\r\n    });\r\n    searchParams = [...searchParams, ...asc, ...desc];\r\n    const queryString = searchParams.join(\"&\");\r\n    console.log(queryString);\r\n    let address = `${apiList.applicants}?jobId=${jobId}`;\r\n    if (queryString !== \"\") {\r\n      address = `${address}&${queryString}`;\r\n    }\r\n\r\n    console.log(address);\r\n\r\n    axios\r\n      .get(address, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setApplications(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        // console.log(err.response.data);\r\n        setApplications([]);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Applications</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <IconButton onClick={() => setFilterOpen(true)}>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          item\r\n          xs\r\n          direction=\"column\"\r\n          style={{ width: \"100%\" }}\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n        >\r\n          {applications.length > 0 ? (\r\n            applications.map((obj) => (\r\n              <Grid item>\r\n                {/* {console.log(obj)} */}\r\n                <ApplicationTile application={obj} getData={getData} />\r\n              </Grid>\r\n            ))\r\n          ) : (\r\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n              No Applications Found\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <FilterPopup\r\n        open={filterOpen}\r\n        searchOptions={searchOptions}\r\n        setSearchOptions={setSearchOptions}\r\n        handleClose={() => setFilterOpen(false)}\r\n        getData={() => {\r\n          getData();\r\n          setFilterOpen(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JobApplications;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Modal,\r\n  Slider,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  MenuItem,\r\n  Checkbox,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport axios from \"axios\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList, { server } from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  statusBlock: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  jobTileOuter: {\r\n    padding: \"30px\",\r\n    margin: \"20px 0\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  avatar: {\r\n    width: theme.spacing(17),\r\n    height: theme.spacing(17),\r\n  },\r\n}));\r\n\r\nconst FilterPopup = (props) => {\r\n  const classes = useStyles();\r\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\r\n  return (\r\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n      <Paper\r\n        style={{\r\n          padding: \"50px\",\r\n          outline: \"none\",\r\n          minWidth: \"50%\",\r\n        }}\r\n      >\r\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\r\n          {/* <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Application Status\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              item\r\n              xs={9}\r\n              justify=\"space-around\"\r\n              // alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"rejected\"\r\n                      checked={searchOptions.status.rejected}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Rejected\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"applied\"\r\n                      checked={searchOptions.status.applied}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Applied\"\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      name=\"shortlisted\"\r\n                      checked={searchOptions.status.shortlisted}\r\n                      onChange={(event) => {\r\n                        setSearchOptions({\r\n                          ...searchOptions,\r\n                          status: {\r\n                            ...searchOptions.status,\r\n                            [event.target.name]: event.target.checked,\r\n                          },\r\n                        });\r\n                      }}\r\n                    />\r\n                  }\r\n                  label=\"Shortlisted\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid> */}\r\n          <Grid container item alignItems=\"center\">\r\n            <Grid item xs={3}>\r\n              Sort\r\n            </Grid>\r\n            <Grid item container direction=\"row\" xs={9}>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={6}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"name\"\r\n                    checked={searchOptions.sort[\"jobApplicant.name\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.name\": {\r\n                            ...searchOptions.sort[\"jobApplicant.name\"],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"name\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"name\">\r\n                    <Typography>Name</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"jobApplicant.name\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.name\": {\r\n                            ...searchOptions.sort[\"jobApplicant.name\"],\r\n                            desc: !searchOptions.sort[\"jobApplicant.name\"].desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"jobApplicant.name\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={6}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"jobTitle\"\r\n                    checked={searchOptions.sort[\"job.title\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"job.title\": {\r\n                            ...searchOptions.sort[\"job.title\"],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"jobTitle\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"jobTitle\">\r\n                    <Typography>Job Title</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"job.title\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"job.title\": {\r\n                            ...searchOptions.sort[\"job.title\"],\r\n                            desc: !searchOptions.sort[\"job.title\"].desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"job.title\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={6}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"dateOfJoining\"\r\n                    checked={searchOptions.sort.dateOfJoining.status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          dateOfJoining: {\r\n                            ...searchOptions.sort.dateOfJoining,\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"dateOfJoining\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"dateOfJoining\">\r\n                    <Typography>Date of Joining</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort.dateOfJoining.status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          dateOfJoining: {\r\n                            ...searchOptions.sort.dateOfJoining,\r\n                            desc: !searchOptions.sort.dateOfJoining.desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort.dateOfJoining.desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                container\r\n                xs={6}\r\n                justify=\"space-around\"\r\n                alignItems=\"center\"\r\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\r\n              >\r\n                <Grid item>\r\n                  <Checkbox\r\n                    name=\"rating\"\r\n                    checked={searchOptions.sort[\"jobApplicant.rating\"].status}\r\n                    onChange={(event) =>\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.rating\": {\r\n                            ...searchOptions.sort[[\"jobApplicant.rating\"]],\r\n                            status: event.target.checked,\r\n                          },\r\n                        },\r\n                      })\r\n                    }\r\n                    id=\"rating\"\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <label for=\"rating\">\r\n                    <Typography>Rating</Typography>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <IconButton\r\n                    disabled={!searchOptions.sort[\"jobApplicant.rating\"].status}\r\n                    onClick={() => {\r\n                      setSearchOptions({\r\n                        ...searchOptions,\r\n                        sort: {\r\n                          ...searchOptions.sort,\r\n                          \"jobApplicant.rating\": {\r\n                            ...searchOptions.sort[\"jobApplicant.rating\"],\r\n                            desc: !searchOptions.sort[\"jobApplicant.rating\"]\r\n                              .desc,\r\n                          },\r\n                        },\r\n                      });\r\n                    }}\r\n                  >\r\n                    {searchOptions.sort[\"jobApplicant.rating\"].desc ? (\r\n                      <ArrowDownwardIcon />\r\n                    ) : (\r\n                      <ArrowUpwardIcon />\r\n                    )}\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\" }}\r\n              onClick={() => getData()}\r\n            >\r\n              Apply\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ApplicationTile = (props) => {\r\n  const classes = useStyles();\r\n  const { application, getData } = props;\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [open, setOpen] = useState(false);\r\n  const [openEndJob, setOpenEndJob] = useState(false);\r\n  const [rating, setRating] = useState(application.jobApplicant.rating);\r\n\r\n  const appliedOn = new Date(application.dateOfApplication);\r\n\r\n  const changeRating = () => {\r\n    axios\r\n      .put(\r\n        apiList.rating,\r\n        { rating: rating, applicantId: application.jobApplicant.userId },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: \"Rating updated successfully\",\r\n        });\r\n        // fetchRating();\r\n        getData();\r\n        setOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err.response);\r\n        console.log(err);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        // fetchRating();\r\n        getData();\r\n        setOpen(false);\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleCloseEndJob = () => {\r\n    setOpenEndJob(false);\r\n  };\r\n\r\n  const colorSet = {\r\n    applied: \"#3454D1\",\r\n    shortlisted: \"#DC851F\",\r\n    accepted: \"#09BC8A\",\r\n    rejected: \"#D1345B\",\r\n    deleted: \"#B49A67\",\r\n    cancelled: \"#FF8484\",\r\n    finished: \"#4EA5D9\",\r\n  };\r\n\r\n  const getResume = () => {\r\n    if (\r\n      application.jobApplicant.resume &&\r\n      application.jobApplicant.resume !== \"\"\r\n    ) {\r\n      const address = `${server}${application.jobApplicant.resume}`;\r\n      console.log(address);\r\n      axios(address, {\r\n        method: \"GET\",\r\n        responseType: \"blob\",\r\n      })\r\n        .then((response) => {\r\n          const file = new Blob([response.data], { type: \"application/pdf\" });\r\n          const fileURL = URL.createObjectURL(file);\r\n          window.open(fileURL);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setPopup({\r\n            open: true,\r\n            severity: \"error\",\r\n            message: \"Error\",\r\n          });\r\n        });\r\n    } else {\r\n      setPopup({\r\n        open: true,\r\n        severity: \"error\",\r\n        message: \"No resume found\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateStatus = (status) => {\r\n    const address = `${apiList.applications}/${application._id}`;\r\n    const statusData = {\r\n      status: status,\r\n      dateOfJoining: new Date().toISOString(),\r\n    };\r\n    axios\r\n      .put(address, statusData, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        handleCloseEndJob();\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n        handleCloseEndJob();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.jobTileOuter} elevation={3}>\r\n      <Grid container>\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Avatar\r\n            src={`${server}${application.jobApplicant.profile}`}\r\n            className={classes.avatar}\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={7} spacing={1} direction=\"column\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">\r\n              {application.jobApplicant.name}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Rating\r\n              value={\r\n                application.jobApplicant.rating !== -1\r\n                  ? application.jobApplicant.rating\r\n                  : null\r\n              }\r\n              readOnly\r\n            />\r\n          </Grid>\r\n          <Grid item>Job Title: {application.job.title}</Grid>\r\n          <Grid item>Role: {application.job.jobType}</Grid>\r\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\r\n          <Grid item>\r\n            SOP: {application.sop !== \"\" ? application.sop : \"Not Submitted\"}\r\n          </Grid>\r\n          <Grid item>\r\n            {application.jobApplicant.skills.map((skill) => (\r\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={3}>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.statusBlock}\r\n              color=\"primary\"\r\n              onClick={() => getResume()}\r\n            >\r\n              Download Resume\r\n            </Button>\r\n          </Grid>\r\n          <Grid item container xs>\r\n            {/* {buttonSet[application.status]} */}\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.statusBlock}\r\n              style={{\r\n                background: \"#09BC8A\",\r\n              }}\r\n              onClick={() => {\r\n                setOpenEndJob(true);\r\n              }}\r\n            >\r\n              End Job\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.statusBlock}\r\n              onClick={() => {\r\n                setOpen(true);\r\n              }}\r\n            >\r\n              Rate Applicant\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Rating\r\n            name=\"simple-controlled\"\r\n            style={{ marginBottom: \"30px\" }}\r\n            value={rating === -1 ? null : rating}\r\n            onChange={(event, newValue) => {\r\n              setRating(newValue);\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ padding: \"10px 50px\" }}\r\n            onClick={() => changeRating()}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Paper>\r\n      </Modal>\r\n      <Modal\r\n        open={openEndJob}\r\n        onClose={handleCloseEndJob}\r\n        className={classes.popupDialog}\r\n      >\r\n        <Paper\r\n          style={{\r\n            padding: \"20px\",\r\n            outline: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            minWidth: \"30%\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\r\n            Are you sure?\r\n          </Typography>\r\n          <Grid container justify=\"center\" spacing={5}>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => {\r\n                  updateStatus(\"finished\");\r\n                }}\r\n              >\r\n                Yes\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ padding: \"10px 50px\" }}\r\n                onClick={() => handleCloseEndJob()}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Modal>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nconst AcceptedApplicants = (props) => {\r\n  const setPopup = useContext(SetPopupContext);\r\n  const [applications, setApplications] = useState([]);\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const [searchOptions, setSearchOptions] = useState({\r\n    sort: {\r\n      \"jobApplicant.name\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      \"job.title\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n      dateOfJoining: {\r\n        status: true,\r\n        desc: true,\r\n      },\r\n      \"jobApplicant.rating\": {\r\n        status: false,\r\n        desc: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    let searchParams = [];\r\n    searchParams = [...searchParams, `status=accepted`];\r\n\r\n    let asc = [],\r\n      desc = [];\r\n\r\n    Object.keys(searchOptions.sort).forEach((obj) => {\r\n      const item = searchOptions.sort[obj];\r\n      if (item.status) {\r\n        if (item.desc) {\r\n          desc = [...desc, `desc=${obj}`];\r\n        } else {\r\n          asc = [...asc, `asc=${obj}`];\r\n        }\r\n      }\r\n    });\r\n\r\n    searchParams = [...searchParams, ...asc, ...desc];\r\n    const queryString = searchParams.join(\"&\");\r\n    console.log(queryString);\r\n    let address = `${apiList.applicants}`;\r\n    if (queryString !== \"\") {\r\n      address = `${address}?${queryString}`;\r\n    }\r\n\r\n    console.log(address);\r\n\r\n    axios\r\n      .get(address, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setApplications(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response);\r\n        // console.log(err.response.data);\r\n        setApplications([]);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Employees</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <IconButton onClick={() => setFilterOpen(true)}>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          item\r\n          xs\r\n          direction=\"column\"\r\n          style={{ width: \"100%\" }}\r\n          alignItems=\"stretch\"\r\n          justify=\"center\"\r\n        >\r\n          {applications.length > 0 ? (\r\n            applications.map((obj) => (\r\n              <Grid item>\r\n                {/* {console.log(obj)} */}\r\n                <ApplicationTile application={obj} getData={getData} />\r\n              </Grid>\r\n            ))\r\n          ) : (\r\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n              No Applications Found\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      <FilterPopup\r\n        open={filterOpen}\r\n        searchOptions={searchOptions}\r\n        setSearchOptions={setSearchOptions}\r\n        handleClose={() => setFilterOpen(false)}\r\n        getData={() => {\r\n          getData();\r\n          setFilterOpen(false);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AcceptedApplicants;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Modal,\r\n  Paper,\r\n  makeStyles,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/material.css\";\r\n\r\nimport { SetPopupContext } from \"../../App\";\r\n\r\nimport apiList from \"../../lib/apiList\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    height: \"inherit\",\r\n  },\r\n  popupDialog: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // padding: \"30px\",\r\n  },\r\n}));\r\n\r\nconst Profile = (props) => {\r\n  const classes = useStyles();\r\n  const setPopup = useContext(SetPopupContext);\r\n\r\n  const [profileDetails, setProfileDetails] = useState({\r\n    name: \"\",\r\n    bio: \"\",\r\n    contactNumber: \"\",\r\n  });\r\n\r\n  const [phone, setPhone] = useState(\"\");\r\n\r\n  const handleInput = (key, value) => {\r\n    setProfileDetails({\r\n      ...profileDetails,\r\n      [key]: value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = () => {\r\n    axios\r\n      .get(apiList.user, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setProfileDetails(response.data);\r\n        setPhone(response.data.contactNumber);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data);\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: \"Error\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    let updatedDetails = {\r\n      ...profileDetails,\r\n    };\r\n    if (phone !== \"\") {\r\n      updatedDetails = {\r\n        ...profileDetails,\r\n        contactNumber: `+${phone}`,\r\n      };\r\n    } else {\r\n      updatedDetails = {\r\n        ...profileDetails,\r\n        contactNumber: \"\",\r\n      };\r\n    }\r\n\r\n    axios\r\n      .put(apiList.user, updatedDetails, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"success\",\r\n          message: response.data.message,\r\n        });\r\n        getData();\r\n      })\r\n      .catch((err) => {\r\n        setPopup({\r\n          open: true,\r\n          severity: \"error\",\r\n          message: err.response.data.message,\r\n        });\r\n        console.log(err.response);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        item\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h2\">Profile</Typography>\r\n        </Grid>\r\n        <Grid item xs style={{ width: \"100%\" }}>\r\n          <Paper\r\n            style={{\r\n              padding: \"20px\",\r\n              outline: \"none\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              //   width: \"60%\",\r\n            }}\r\n          >\r\n            <Grid container direction=\"column\" alignItems=\"stretch\" spacing={3}>\r\n              <Grid item>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  value={profileDetails.name}\r\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\r\n                  className={classes.inputBox}\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  label=\"Bio (upto 250 words)\"\r\n                  multiline\r\n                  rows={8}\r\n                  style={{ width: \"100%\" }}\r\n                  variant=\"outlined\"\r\n                  value={profileDetails.bio}\r\n                  onChange={(event) => {\r\n                    if (\r\n                      event.target.value.split(\" \").filter(function (n) {\r\n                        return n != \"\";\r\n                      }).length <= 250\r\n                    ) {\r\n                      handleInput(\"bio\", event.target.value);\r\n                    }\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <PhoneInput\r\n                  country={\"in\"}\r\n                  value={phone}\r\n                  onChange={(phone) => setPhone(phone)}\r\n                  style={{ width: \"auto\" }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\r\n              onClick={() => handleUpdate()}\r\n            >\r\n              Update Details\r\n            </Button>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { Snackbar, Slide } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst MessagePopup = (props) => {\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    props.setOpen(false);\r\n  };\r\n  return (\r\n    <Snackbar open={props.open} onClose={handleClose} autoHideDuration={2000}>\r\n      <Alert onClose={handleClose} severity={props.severity}>\r\n        {props.message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default MessagePopup;\r\n","import { createContext, useState } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport { Grid, makeStyles } from \"@material-ui/core\";\r\n\r\nimport Welcome, { ErrorPage } from \"./component/Welcome\";\r\nimport Navbar from \"./component/Navbar\";\r\nimport Login from \"./component/Login\";\r\nimport Logout from \"./component/Logout\";\r\nimport Signup from \"./component/Signup\";\r\nimport Home from \"./component/Home\";\r\nimport Applications from \"./component/Applications\";\r\nimport Profile from \"./component/Profile\";\r\nimport CreateJobs from \"./component/recruiter/CreateJobs\";\r\nimport MyJobs from \"./component/recruiter/MyJobs\";\r\nimport JobApplications from \"./component/recruiter/JobApplications\";\r\nimport AcceptedApplicants from \"./component/recruiter/AcceptedApplicants\";\r\nimport RecruiterProfile from \"./component/recruiter/Profile\";\r\nimport MessagePopup from \"./lib/MessagePopup\";\r\nimport isAuth, { userType } from \"./lib/isAuth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  body: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    minHeight: \"98vh\",\r\n    paddingTop: \"64px\",\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport const SetPopupContext = createContext();\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [popup, setPopup] = useState({\r\n    open: false,\r\n    severity: \"\",\r\n    message: \"\",\r\n  });\r\n  return (\r\n    <BrowserRouter>\r\n      <SetPopupContext.Provider value={setPopup}>\r\n        <Grid container direction=\"column\">\r\n          <Grid item xs>\r\n            <Navbar />\r\n          </Grid>\r\n          <Grid item className={classes.body}>\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Welcome />\r\n              </Route>\r\n              <Route exact path=\"/login\">\r\n                <Login />\r\n              </Route>\r\n              <Route exact path=\"/signup\">\r\n                <Signup />\r\n              </Route>\r\n              <Route exact path=\"/logout\">\r\n                <Logout />\r\n              </Route>\r\n              <Route exact path=\"/home\">\r\n                <Home />\r\n              </Route>\r\n              <Route exact path=\"/applications\">\r\n                <Applications />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                {userType() === \"recruiter\" ? (\r\n                  <RecruiterProfile />\r\n                ) : (\r\n                  <Profile />\r\n                )}\r\n              </Route>\r\n              <Route exact path=\"/addjob\">\r\n                <CreateJobs />\r\n              </Route>\r\n              <Route exact path=\"/myjobs\">\r\n                <MyJobs />\r\n              </Route>\r\n              <Route exact path=\"/job/applications/:jobId\">\r\n                <JobApplications />\r\n              </Route>\r\n              <Route exact path=\"/employees\">\r\n                <AcceptedApplicants />\r\n              </Route>\r\n              <Route>\r\n                <ErrorPage />\r\n              </Route>\r\n            </Switch>\r\n          </Grid>\r\n        </Grid>\r\n        <MessagePopup\r\n          open={popup.open}\r\n          setOpen={(status) =>\r\n            setPopup({\r\n              ...popup,\r\n              open: status,\r\n            })\r\n          }\r\n          severity={popup.severity}\r\n          message={popup.message}\r\n        />\r\n      </SetPopupContext.Provider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}